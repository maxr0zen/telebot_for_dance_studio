import telebot
from openpyxl import load_workbook
from telebot import types

bot = telebot.TeleBot('5743624493:AAH1KRDwhERIsIeDCJ5U0jDyLQS5k6urMkk')

class OpenGroups:
    info = type(str)
    button = type(telebot.types.KeyboardButton)
    text = type(str)
    counter = 0
    name = type(str)
    all_keys = {}

    def __init__(self, info, button, text,name):
        OpenGroups.counter += 1
        self.info = info
        self.button = button
        self.text = text
        self.name = name
        self.text_overflow(text, info= self.info, all_keys= OpenGroups.all_keys)

    def text_overflow(self, text, info, all_keys):
        self.all_keys[text] = info


group_4_5 = OpenGroups(info = '–û—Å–Ω–æ–≤–Ω–æ–π –ø–µ–¥–∞–≥–æ–≥: –ö–æ—Ä—Å–∞–∫–æ–≤–∞ –ï–≤–≥–µ–Ω–∏—è \n –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ: \n –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫: 18:00 - 19:00 \n –ß–µ—Ç–≤–µ—Ä–≥: 18:30 - 19:30 \n C—É–±–±–æ—Ç–∞: 16:00 - 17:00',
                       button = types.KeyboardButton("/üìÖ –≥—Ä—É–ø–ø–∞ 4-5"), text = "/üìÖ –≥—Ä—É–ø–ø–∞ 4-5", name= 'group_4_5')
group_6_7 = OpenGroups(info = '–û—Å–Ω–æ–≤–Ω–æ–π –ø–µ–¥–∞–≥–æ–≥: –ò–≤–∞—â–µ–Ω–∫–æ –î–∏–∞–Ω–∞ \n –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ: \n –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫:  19:00 ‚Äì 20:00 \n –í—Ç–æ—Ä–Ω–∏–∫: 19:00 ‚Äì 20:00\n –ß–µ—Ç–≤–µ—Ä–≥:  19:30 ‚Äì 20:30\n –°—É–±–±–æ—Ç–∞:  15:00 ‚Äì 16:00',
                       button = types.KeyboardButton("/üìÖ –≥—Ä—É–ø–ø–∞ 6-7"), text = "/üìÖ –≥—Ä—É–ø–ø–∞ 6-7", name= 'group_6_7')
group_8_9 = OpenGroups(info = '–û—Å–Ω–æ–≤–Ω–æ–π –ø–µ–¥–∞–≥–æ–≥: –ê–≥–∞—Ñ–æ–Ω–æ–≤ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä\n –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ:\n –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫:  18:00 ‚Äì 19:00\n –°—Ä–µ–¥–∞: 18:15 ‚Äì 19:15\n –ü—è—Ç–Ω–∏—Ü–∞:  18:00 ‚Äì 19:00\n –°—É–±–±–æ—Ç–∞:  11:00 ‚Äì 12:00' + '\n\n' +
                       '–û—Å–Ω–æ–≤–Ω–æ–π –ø–µ–¥–∞–≥–æ–≥: –ê–≥–∞—Ñ–æ–Ω–æ–≤ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä\n –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ:\n –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫:  19:00 ‚Äì 20:00\n –í—Ç–æ—Ä–Ω–∏–∫: 18:15 ‚Äì 19:30 \n –°—Ä–µ–¥–∞:  19:15 ‚Äì 20:30\n –ü—è—Ç–Ω–∏—Ü–∞:  19:00 ‚Äì 20:15',
                       button = types.KeyboardButton("/üìÖ –≥—Ä—É–ø–ø–∞ 8-9"), text = "/üìÖ –≥—Ä—É–ø–ø–∞ 8-9", name= 'group_8_9')
group_9_10 = OpenGroups(info = '–û—Å–Ω–æ–≤–Ω–æ–π –ø–µ–¥–∞–≥–æ–≥: –ö–æ–≤–∞–ª–µ–Ω–∫–æ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä\n –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ:\n –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫:  16:00 ‚Äì 17:30\n –°—Ä–µ–¥–∞: 16:30 ‚Äì 18:00\n –ß–µ—Ç–≤–µ—Ä–≥:  17:00 ‚Äì 18:30\n –°—É–±–±–æ—Ç–∞ : 12:00 ‚Äì 13:00; 13:00 ‚Äì 14:30',
                        button =  types.KeyboardButton("/üìÖ –≥—Ä—É–ø–ø–∞ 9-10"), text = "/üìÖ –≥—Ä—É–ø–ø–∞ 9-10", name= 'group_9_10')
group_13_16 = OpenGroups(info = '–û—Å–Ω–æ–≤–Ω–æ–π –ø–µ–¥–∞–≥–æ–≥: –ó–∞–¥–≤–æ—Ä–Ω–µ–≤–∞ –í–∏–∫—Ç–æ—Ä–∏—è\n –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ:\n –í—Ç–æ—Ä–Ω–∏–∫:  16:00 ‚Äì 17:30\n –°—Ä–µ–¥–∞: 16:00 ‚Äì 17:30\n –ü—è—Ç–Ω–∏—Ü–∞:  16:00 ‚Äì 17:30\n –°—É–±–±–æ—Ç–∞:  17:00 ‚Äì 18:30',
                         button = types.KeyboardButton("/üìÖ –≥—Ä—É–ø–ø–∞ 13-16"), text = "/üìÖ –≥—Ä—É–ø–ø–∞ 13-16", name= 'group_13_16')
group_Moms = OpenGroups(info = '–û—Å–Ω–æ–≤–Ω–æ–π –ø–µ–¥–∞–≥–æ–≥: –°–∫–æ–±–µ–ª–∫–∏–Ω–∞ –õ–∞—Ä–∏—Å–∞\n –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ: \n –í—Ç–æ—Ä–Ω–∏–∫: 19:30 ‚Äì 21:00\n –°—É–±–±–æ—Ç–∞:  13:00 ‚Äì 14:30',
                        button = types.KeyboardButton("/üìÖ –≥—Ä—É–ø–ø–∞ –¥–ª—è –ú–∞–º"), text = "/üìÖ –≥—Ä—É–ø–ø–∞ –¥–ª—è –ú–∞–º", name='group_Moms')
group_Tvorcha = OpenGroups(info = '–û—Å–Ω–æ–≤–Ω–æ–π –ø–µ–¥–∞–≥–æ–≥: –ú–∞—Ä–∏—è –í–µ—Å–µ–ª–æ–≤–∞\n –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ: \n –í—Ç–æ—Ä–Ω–∏–∫:  18:00 ‚Äì 19:30 \n –ß–µ—Ç–≤–µ—Ä–≥:  18:00 ‚Äì 19:30\n –°—É–±–±–æ—Ç–∞:  18:00 ‚Äì 19:30',
                           button = types.KeyboardButton("/üìÖ —Ç–≤–æ—Ä—á–µ—Å–∫–∞—è 12+"), text = "/üìÖ —Ç–≤–æ—Ä—á–µ—Å–∫–∞—è 12+", name='group_Tvorcha')
group_Utro = OpenGroups(info = '–û—Å–Ω–æ–≤–Ω–æ–π –ø–µ–¥–∞–≥–æ–≥: –ö–æ–≤–∞–ª–µ–Ω–∫–æ –ê–ª–µ–∫—Å–∞–Ω–¥—Ä\n –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ:\n –í—Ç–æ—Ä–Ω–∏–∫:  10:00 ‚Äì 11:30\n –°—Ä–µ–¥–∞: 10:00 ‚Äì 11:30\n –ü—è—Ç–Ω–∏—Ü–∞: 10:00 ‚Äì 11:30\n –°—É–±–±–æ—Ç–∞:  12:00 ‚Äì 13:00',
                        button = types.KeyboardButton("/üìÖ —É—Ç—Ä–µ–Ω–Ω—è—è 10-14"), text = "/üìÖ —É—Ç—Ä–µ–Ω–Ω—è—è 10-14", name='group_Utro')



wb = load_workbook('./Gruppy_Vzroslye.xlsx')                            #–°–∏—á—Ç–≤—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–π excel —Ñ–∞–π–ª
some_lists = wb.get_sheet_names()                                       #–°—á–∏—Ç—ã–≤–∞–µ–º –ª–∏—Å—Ç—ã —Å excel
phones = []                                                             #–ú–∞—Å—Å–∏–≤ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–≤
till_classes = []                                                       #–ú–∞—Å—Å–∏–≤ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –∑–∞–Ω—è—Ç–∏–π
names = []                                                              #–ú–∞—Å—Å–∏–≤ –§–∞–º–∏–ª–∏–∏ –∏ –ò–º—è–Ω–∏ —É—á–µ–Ω–∏–∫–∞ —Å—Ç—É–¥–∏–∏
alert = ''                                                              #–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ç—Ä–æ–∫–∏ –¥–ª—è data.txt
parsed_data = []                                                        #–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Å—á–∏—Ç—ã–≤–∞–Ω–∏—è —Å—Ç—Ä–æ–∫–∏ –∏–∑ data.txt
table_button = '/üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ'
chose_group_button = 'üëÄ–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–∫–æ–ª—å–∫–æ –∑–∞–Ω—è—Ç–∏–π –æ—Å—Ç–∞–ª–æ—Å—å'
group_name = {}
sheet_titles = []
childs_count = []
all_data = []

def list_manager(some_lists,phones,till_classes,names,wb,group_name,sheet_titles,childs_count, all_data):              #–§—É–Ω–∫—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –ø–∞—Ä—Å–∏—Ç excel –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –≤
    print('---Reading excel---')                                                   #—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –º–∞—Å—Å–∏–≤—ã –¥–∞–Ω–Ω—ã–µ
    current_group = {}
    for item in range(len(some_lists)):
        sheet = wb.get_sheet_by_name(some_lists[item])
        print(sheet.title)
        sheet_titles.append(sheet.title)
        number_of_childs = sheet['Y4'].value
        childs_count.append(number_of_childs)
        current_data = []
        for rower in range(5, number_of_childs + 5):
            phones.append(str(sheet.cell(row=rower, column=23).value))
            till_classes.append(str(sheet.cell(row=rower, column=24).value))
            names.append(sheet.cell(row=rower, column=2).value)
            current_name = sheet.cell(row=rower, column=2).value
            current_TK = str(sheet.cell(row=rower, column=24).value)
            current_data += [current_name, current_TK]
        current_group = {sheet.title: current_data}
        group_name.update(current_group)
        print(current_group)
    return print('---Done---'), phones, till_classes, names, group_name, sheet_titles,current_group



def little_lessons_count(phones):                   #–ü—Ä–æ–≤–µ—Ä–∫–∞, –µ—Å–ª–∏ —É —á–µ–ª–æ–≤–µ–∫–∞ –º–µ–Ω—å—à–µ 3 –∑–∞–Ω—è—Ç–∏–π, —Ç–æ
    data2 = open('./data.txt', 'r+')                #–ø—Ä–∏—Ö–æ–¥–∏—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –ø—Ä–æ–¥–ª–µ–Ω–∏–∏ –∞–±–æ–Ω–µ–º–µ–Ω—Ç–∞
    parsed_data = data2.readlines()
    for item in range(len(parsed_data)):
        now_str = parsed_data[item].split()
        now_phone = now_str[0]
        print(now_phone)
        if (till_classes[item] <= 3) and (int(now_phone) in phones):
            bot.send_message(now_str[1], '–£ –≤–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å –º–µ–Ω—å—à–µ 3 –∑–∞–Ω—è—Ç–∏–π, –ø–æ–∞–∂–ª—É–π—Å—Ç–∞, –ø—Ä–æ–¥–ª–∏—Ç–µ –∞–±–æ–Ω–µ–º–µ–Ω—Ç')
    data2.close()
    little_lessons_count(phones)


list_manager(some_lists,phones, till_classes, names,wb, group_name, sheet_titles, childs_count,all_data)                 #–ó–∞–ø—É—Å–∫ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Ç –≤—Ç–æ—Ä–æ–≥–æ —Ñ–∞–π–ª–∞
wb = load_workbook('./Gruppy_Deti.xlsx')
some_lists = wb.get_sheet_names()
print(some_lists)
list_manager(some_lists, phones, till_classes, names, wb, group_name, sheet_titles, childs_count,all_data)

current_id = 0
print(group_name)




class AllGroup:
    text = type(str)
    button = type(str)
    members = type(list)
    till_classes = type(list)
    info = type(list)
    def __init__(self, text, button, info, members):
        self.text = text
        self.button = button
        self.info = info
        self.members_collect(members= members, info= info, till_classes= info)
    def members_collect(self, members, info, till_classes):
        members :list = []
        till_classes :list = []
        for value in range(len(info)):
            if value%2 == 0:  members.append(info[value])
            else: till_classes.append(info[value])
        print(members)
        print(till_classes)




for key, value in group_name.items():
    print(key)
    group = AllGroup(text= key, button= types.KeyboardButton(value), info= value, members= None)

@bot.message_handler(commands=['start'])                                #–°—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –±–æ—Ç–∞ 
def greetings(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton(table_button)
    btn2 = types.KeyboardButton(chose_group_button)
    markup.add(btn1, btn2)
    bot.send_message(message.from_user.id, "–±–æ—Ç –∑–∞–ø—É—â–µ–Ω", reply_markup=markup)



@bot.message_handler(content_types=['text'])                            #–û—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –±–æ—Ç–∞
def get_text_messages(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton(table_button)
    btn2 = types.KeyboardButton(chose_group_button)
    markup.add(btn1, btn2)
    to_start = types.KeyboardButton("–ö –Ω–∞—á–∞–ª—É")


    current_name = str(message.text)
    open_group_previous = types.KeyboardButton(".‚óÄ")
    open_group_next = types.KeyboardButton(".‚ñ∂")

    open_group_table_first_markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    open_group_table_first_markup.add(group_4_5.button, group_6_7.button, group_8_9.button, group_9_10.button, open_group_next)

    open_group_table_second_markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    open_group_table_second_markup.add(group_13_16.button,group_Moms.button, group_Tvorcha.button, group_Utro.button, open_group_previous, to_start)
    all_groups_first_table = types.ReplyKeyboardMarkup(resize_keyboard=True)
    all_groups_2_table = types.ReplyKeyboardMarkup(resize_keyboard=True)
    all_groups_3_table = types.ReplyKeyboardMarkup(resize_keyboard=True)
    all_groups_4_table = types.ReplyKeyboardMarkup(resize_keyboard=True)
    Vika_closed = types.KeyboardButton("–ó–∞–∫—Ä—ã—Ç–∞—è –í–∏–∫–∞")
    gr_13_16 = types.KeyboardButton("13-16")
    X_bpm = types.KeyboardButton("X-bpm")
    P_teens = types.KeyboardButton("P teens")
    K_lab = types.KeyboardButton("K-lab")
    The_way = types.KeyboardButton("The-way")
    Arkies = types.KeyboardButton("Arkies")
    Tvorcha = types.KeyboardButton('–¢–≤–æ—Ä—á–∞')
    baepsae = types.KeyboardButton("Baepsae")
    moms = types.KeyboardButton("–ú–∞–º—ã")
    utro = types.KeyboardButton("–£—Ç—Ä–æ")
    gr_4_5 = types.KeyboardButton("–ì—Ä—É–ø–ø–∞ 4-5")
    gr_6_7 = types.KeyboardButton("–ì—Ä—É–ø–ø–∞ 6-7")
    gr_8_9_1 = types.KeyboardButton("–ì—Ä—É–ø–ø–∞1 8-9")
    gr_8_9_2 = types.KeyboardButton("–ì—Ä—É–ø–ø–∞2 8-9")
    from1to2 = types.KeyboardButton("–í—Ç–æ—Ä–∞—è ‚ñ∂")
    from2to3 = types.KeyboardButton("–¢—Ä–µ—Ç—å—è ‚ñ∂")
    from3to4 = types.KeyboardButton("–ß–µ—Ç–≤–µ—Ä—Ç–∞—è ‚ñ∂")
    from4to3 = types.KeyboardButton("‚óÄ –¢—Ä–µ—Ç—å—è")
    from3to2 = types.KeyboardButton("‚óÄ –í—Ç–æ—Ä–∞—è")
    from2to1 = types.KeyboardButton("‚óÄ –ü–µ—Ä–≤–∞—è")
    all_groups_first_table.add(Vika_closed, gr_13_16, X_bpm, P_teens, from1to2)
    all_groups_2_table.add(K_lab,The_way,Arkies,from2to1,Tvorcha,from2to3)
    all_groups_3_table.add(baepsae,moms,utro,from3to2,gr_4_5,from3to4)
    all_groups_4_table.add(gr_6_7,gr_8_9_1,gr_8_9_2,from4to3)

    if current_name in sheet_titles:
        bot.send_message(message.from_user.id, "–í–≤–µ–¥–∏—Ç–µ –ò–º—è –∏ –§–∞–º–∏–ª–∏—é")
        now = group_name[current_name]
        print(now)
    if message.text == table_button or message.text == ".‚óÄ":
        bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É", reply_markup=open_group_table_first_markup)
    if message.text == ".‚ñ∂":
        bot.send_message(message.from_user.id, "–î—Ä—É–≥–∏–µ –ì—Ä—É–ø–ø—ã", reply_markup=open_group_table_second_markup)
    elif message.text in OpenGroups.all_keys:
        for item in OpenGroups.all_keys:
            if message.text == item:
                bot.send_message(message.from_user.id, OpenGroups.all_keys[item])

    if message.text == "üëÄ–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–∫–æ–ª—å–∫–æ –∑–∞–Ω—è—Ç–∏–π –æ—Å—Ç–∞–ª–æ—Å—å" or message.text == "‚óÄ –ü–µ—Ä–≤–∞—è":
        bot.send_message(message.from_user.id,"–ü–µ—Ä–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞",reply_markup=all_groups_first_table)
    if message.text == "–ö –Ω–∞—á–∞–ª—É":
        bot.send_message(message.from_user.id, "–í–æ–∑–≤—Ä–∞—â–∞—é—Å—å –∫ –Ω–∞—á–∞–ª—É", reply_markup=markup)
    if message.text == "–í—Ç–æ—Ä–∞—è ‚ñ∂" or message.text == "‚óÄ –í—Ç–æ—Ä–∞—è":
        bot.send_message(message.from_user.id, "–í—Ç–æ—Ä–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞",reply_markup= all_groups_2_table)
    if message.text == "–¢—Ä–µ—Ç—å—è ‚ñ∂" or message.text == "‚óÄ –¢—Ä–µ—Ç—å—è":
        bot.send_message(message.from_user.id, "–¢—Ä–µ—Ç—å—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞",reply_markup= all_groups_3_table)
    if message.text == "–ß–µ—Ç–≤–µ—Ä—Ç–∞—è ‚ñ∂":
        bot.send_message(message.from_user.id, "–ß–µ—Ç–≤–µ—Ä—Ç–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞",reply_markup= all_groups_4_table)
    if current_name in names:
        for i in range(len(names)):
            if current_name == names[i]:
                bot.send_message(message.from_user.id, F"–£ –≤–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å {till_classes[i]} –∑–∞–Ω—è—Ç–∏–π")









if __name__ == '__main__':
    bot.polling(none_stop=True, interval=0)




















